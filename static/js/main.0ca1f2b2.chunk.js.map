{"version":3,"sources":["components/field.js","components/languages.js","components/translate.js","App.js","index.js"],"names":["field","_ref","label","value","onChange","react_default","a","createElement","className","e","target","LANGUAGES","Languages","language","onLanguageChange","undefined","languageConfig","find","l","Error","concat","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","onClick","map","_ref2","key","Math","random","href","doTranslation","asyncToGenerator","regenerator_default","mark","_callee","input","languageCode","cancelToken","_yield$axios$post","data","wrap","_context","prev","next","axios","post","q","token","sent","abrupt","translations","translatedText","t0","stop","_x","_x2","_x3","apply","this","arguments","translate","text","translated","setTranslated","useEffect","CancelToken","source","then","cancel","err","App","setLanguage","_useState3","_useState4","setText","languages","render","document","querySelector"],"mappings":"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","file":"static/js/main.0ca1f2b2.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default ({ label, value, onChange }) => {\n  return (\n    <div>\n      <label>{label}</label>\n      <input\n        className=\"input\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </div>\n  );\n};\n","/* eslint-disable */\nimport React, { useState } from \"react\";\n\nconst LANGUAGES = [\n  { label: \"Afrikaans\", value: \"af\" },\n  { label: \"Arabic\", value: \"ar\" },\n  { label: \"French\", value: \"fr\" },\n  { label: \"Hindi\", value: \"hi\" },\n  { label: \"Japanese\", value: \"ja\" },\n  { label: \"Portuguese\", value: \"pt\" },\n  { label: \"English\", value: \"en\" },\n  { label: \"Simplified Chinese\", value: \"zh-CN\" },\n  { label: \"Spanish\", value: \"es\" },\n  { label: \"Swahili\", value: \"sw\" },\n  { label: \"Thai\", value: \"th\" }\n];\n\nconst Languages = ({ language, onLanguageChange }) => {\n  if (language === undefined) {\n    language = \"en\";\n  }\n  const languageConfig = LANGUAGES.find((l) => l.value === language);\n  if (!languageConfig) {\n    throw new Error(`Unknown language code '${language}'`);\n  }\n\n  const [open, setOpen] = useState(false);\n\n  const onSelect = (language) => {\n    setOpen(false);\n    onLanguageChange(language);\n  };\n\n  return (\n    <div>\n      <label className=\"label\">Введите язык</label>\n      <div className={`dropdown ${open && \"is-active\"}`}>\n        <div className=\"dropdown-trigger\">\n          <button className=\"button\" onClick={() => setOpen(!open)}>\n            <span>{languageConfig.label}</span>\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-angle-down\" />\n            </span>\n          </button>\n        </div>\n        <div className=\"dropdown-menu\">\n          <div className=\"dropdown-content\">\n            {LANGUAGES.map(({ label, value }) => {\n              return (\n                <a\n                  key={Math.random()}\n                  href=\"#\"\n                  onClick={() => onSelect(value)}\n                  className=\"dropdown-item\"\n                >\n                  {label}\n                </a>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Languages;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst doTranslation = async (input, languageCode, cancelToken) => {\n  try {\n    const { data } = await axios.post(\n      \"https://translation.googleapis.com/language/translate/v2?key=AIzaSyA_X7kFQw3IrzEriD8IyKLcLnF0JoeXZDk\",\n      {\n        q: input,\n        target: languageCode\n      },\n      { cancelToken: cancelToken.token }\n    );\n\n    return data.data.translations[0].translatedText;\n  } catch (err) {\n    return \"\";\n  }\n};\n\nexport default ({ language, text }) => {\n  const [translated, setTranslated] = useState(\"\");\n\n  useEffect(() => {\n    if (!text) {\n      return;\n    }\n\n    const cancelToken = axios.CancelToken.source();\n\n    doTranslation(text, language, cancelToken).then(setTranslated);\n\n    return () => {\n      try {\n        cancelToken.cancel();\n      } catch (err) {}\n    };\n  }, [text, language]);\n\n  return (\n    <div>\n      <label className=\"label\">Output</label>\n      <h1 className=\"title\">{translated}</h1>\n    </div>\n  );\n};\n","import \"./styles.css\";\nimport React, { useState } from \"react\";\nimport Field from \"./components/field\";\nimport Languages from \"./components/languages\";\nimport Translate from \"./components/translate\";\n\nexport default function App() {\n  const [language, setLanguage] = useState(\"en\");\n  const [text, setText] = useState(\"Реакция\");\n\n  return (\n    <div>\n      <Field label=\"Введите русские слова\" onChange={setText} value={text} />\n      <Languages language={language} onLanguageChange={setLanguage} />\n      <hr />\n      <Translate text={text} language={language} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}